#!/usr/bin/bash
# CC0, Wei-Lun Chao <bluebat@member.fsf.org>, 2018
if [ $ARENA_MOVENO -eq 0 ] ; then
  ARENA_BOARD=""
  PIECES="KAAEERRHHCCPPPkaaeerrhhccppp"
  for i in {28..1} ; do
    PIECE=${PIECES:RANDOM%i:1}
    PIECES=${PIECES/$PIECE/}
    ARENA_BOARD=$ARENA_BOARD$PIECE
  done
  ARENA_BOARD="${ARENA_BOARD:0:11}__${ARENA_BOARD:11:6}__${ARENA_BOARD:17:11}/"
  echo "$ARENA_BOARD"
  exit 0
fi

POSXS="ABCDEFGHJ"
POSx=${POSXS%%${ARENA_MOVE:0:1}*}
POSX1=${#POSx} # x position of piece1 0..7
POSx=${POSXS%%${ARENA_MOVE:2:1}*}
POSX2=${#POSx} # x position of piece2 0..7
[ $POSX1 -eq 8 -o $POSX2 -eq 8 ] && exit 1
POSY1=$((${ARENA_MOVE:1:1}-1)) # y position of piece1 0..3
POSY2=$((${ARENA_MOVE:3:1}-1)) # y position of piece2 0..3
[ $POSY1 -gt 3 -o $POSY2 -gt 3 ] && exit 1
DIST=$(((POSX1-POSX2)*(POSX1-POSX2)+(POSY1-POSY2)*(POSY1-POSY2)))

if [ ${#ARENA_MOVE} -eq 4 ] ; then
  SEQ1=$((POSY1*8+POSX1))
  [ $SEQ1 -lt 0 -o $SEQ1 -gt 31 ] && exit 1
  PIECE1=${ARENA_BOARD:SEQ1:1}
  SEQ2=$((POSY2*8+POSX2))
  [ $SEQ2 -lt 0 -o $SEQ2 -gt 31 ] && exit 1
  PIECE2=${ARENA_BOARD:SEQ2:1}
else
  exit 1
fi

[ ${PIECE1} = _ -o $SEQ1 -eq $SEQ2 ] && exit 1

[ $((ARENA_MOVENO%2)) -eq 1 ] && TURN=$ARENA_COLOR1 || TURN=$ARENA_COLOR2 # get color turn
if [ $TURN = Red ] ; then
  [ $PIECE1 != ${PIECE1^} ] && exit 1
  [ $PIECE2 != _ -a $PIECE2 = ${PIECE2^} ] && exit 1
elif [ $TURN = Black ] ; then
  [ $PIECE1 = ${PIECE1^} ] && exit 1
  [ $PIECE2 != _ -a $PIECE2 != ${PIECE2^} ] && exit 1
else
  exit 1
fi

if [ ${PIECE1^} = H ] ; then # check position
  [ $DIST -ne 2 ] && exit 1
elif [ $PIECE2 != _ -a ${PIECE1^} = R ] ; then
  if [ ${ARENA_MOVE:0:1} = ${ARENA_MOVE:2:1} ] ; then
    [ $SEQ1 -gt $SEQ2 ] && DELTASEQ=-8 || DELTASEQ=8
    MIDDLE=0
    let SEQ=SEQ1+DELTASEQ
    while [ $SEQ -ne $SEQ2 ] ; do
      [ ${ARENA_BOARD:SEQ:1} != _ ] && let MIDDLE++
      let SEQ+=DELTASEQ
    done
    [ $MIDDLE -ne 0 ] && exit 1
  elif [ ${ARENA_MOVE:1:1} = ${ARENA_MOVE:3:1} ] ; then
    [ $SEQ1 -gt $SEQ2 ] && MIDDLE=${ARENA_BOARD:SEQ2:SEQ1-SEQ2} || MIDDLE=${ARENA_BOARD:SEQ1:SEQ2-SEQ1}
    MIDDLE=${MIDDLE//_/}
    [ ${#MIDDLE} -ne 1 ] && exit 1
  else
    exit 1
  fi
elif [ $PIECE2 != _ -a ${PIECE1^} = C ] ; then
  if [ ${ARENA_MOVE:0:1} = ${ARENA_MOVE:2:1} ] ; then
    [ $SEQ1 -gt $SEQ2 ] && DELTASEQ=-8 || DELTASEQ=8
    MIDDLE=0
    let SEQ=SEQ1+DELTASEQ
    while [ $SEQ -ne $SEQ2 ] ; do
      [ ${ARENA_BOARD:SEQ:1} != _ ] && let MIDDLE++
      let SEQ+=DELTASEQ
    done
    [ $MIDDLE -ne 1 ] && exit 1
  elif [ ${ARENA_MOVE:1:1} = ${ARENA_MOVE:3:1} ] ; then
    [ $SEQ1 -gt $SEQ2 ] && MIDDLE=${ARENA_BOARD:SEQ2:SEQ1-SEQ2} || MIDDLE=${ARENA_BOARD:SEQ1:SEQ2-SEQ1}
    MIDDLE=${MIDDLE//_/}
    [ ${#MIDDLE} -ne 2 ] && exit 1
  else
    exit 1
  fi
else
  if [ ${ARENA_MOVE:0:1} = ${ARENA_MOVE:2:1} ] ; then
    [ $SEQ1 -gt $SEQ2 ] && let MIDDLE=SEQ1-SEQ2 || let MIDDLE=SEQ2-SEQ1
    [ $MIDDLE -ne 8 ] && exit 1
  elif [ ${ARENA_MOVE:1:1} = ${ARENA_MOVE:3:1} ] ; then
    [ $SEQ1 -gt $SEQ2 ] && let MIDDLE=SEQ1-SEQ2 || let MIDDLE=SEQ2-SEQ1
    [ $MIDDLE -ne 1 ] && exit 1
  else
    exit 1
  fi
fi

if [ $PIECE2 != _ -a $DIST -eq 1 ] ; then # check rank
  RANKS="KAERHCPkaerhcp"
  RANK1=${RANKS%%${PIECE1}*}
  RANK1=$((${#RANK1}%7))
  RANK2=${RANKS%%${PIECE2}*}
  RANK2=$((${#RANK2}%7))
  case $RANK1 in
    0) [ $RANK2 -eq 6 ] && exit 1 ;;
    [1-3]) [ $RANK2 -lt $RANK1 ] && exit 1 ;;    
    6) [ $RANK2 -gt 0 -a $RANK2 -lt 6 ] && exit 1 ;;
  esac
fi

ARENA_BOARD="${ARENA_BOARD:0:$SEQ1}_${ARENA_BOARD:$SEQ1+1}"
[ $PIECE2 != _ ] && ARENA_BOARD="${ARENA_BOARD:0:$SEQ2}${PIECE1}${ARENA_BOARD:$SEQ2+1}${PIECE2}" || ARENA_BOARD="${ARENA_BOARD:0:$SEQ2}${PIECE1}${ARENA_BOARD:$SEQ2+1}"

echo "$ARENA_BOARD"
